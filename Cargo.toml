[package]
authors = ["Gaute Hope <eg@gaute.vetsj.com>"]
edition = "2021"
keywords = ["hdf", "async", "concurrency"]
license = "LGPL-3.0-or-later"
name = "hidefix"
repository = "https://github.com/gauteh/hidefix"
description = "Concurrent HDF5 and NetCDF4 reader (experimental)"
version = "0.10.0"
categories = [ "data", "hdf5", "scientific-data" ]

[lib]
name = "hidefix"
crate-type = ["rlib", "cdylib"]

[dependencies]
anyhow = "1"
async-stream = "0.3"
bincode = "1"
byte-slice-cast = "1"
byteorder = "1"
bytes = "1"
flexbuffers = "2"
futures = "0.3"
futures-core = "0.3"
futures-util = "0.3"
itertools = "0.13"
libdeflater = "1.21"
lru = "0.12"
serde_bytes = "0.11"
strength_reduce = "0.2"
zerocopy = "0.7"
libc = "0.2"
hdf5 = { package = "hdf5-metno", version = "0.9" }
hdf5-sys = { package = "hdf5-metno-sys", version = "0.9", features = ["threadsafe"] }
log = "0.4"
rayon = "1.10"
ndarray = { version = "0.15", features = [ "rayon" ] }
pyo3 = { version = "0.21", optional = true, features = ["anyhow", "auto-initialize", "abi3-py39"] }
numpy = { version = "0.21.0", optional = true }
netcdf = { version = "0.10.0", optional = true }

[dependencies.serde]
features = ["derive"]
version = "1"

[dependencies.tokio]
features = ["sync", "macros", "rt-multi-thread"]
version = "1"

[dev-dependencies]
divan = "0.1.14"
rand = "0.8"
sled = "0.34.7"
reqwest = { version = "0.12", features = [ "blocking" ] }

[profile.release]
lto = 'thin'
codegen-units = 1
debug = true

[features]
default = ["static", "fast-index", "netcdf"]
static = ["hdf5-sys/static", "hdf5-sys/zlib", "netcdf?/static"]
fast-index = []
python = ["pyo3", "numpy"]
extension-module = ["python", "pyo3/extension-module"]
netcdf = [ "dep:netcdf" ]
unstable = []

[[bench]]
name = "concurrency"
harness = false

[[bench]]
name = "dataset"
harness = false

[[bench]]
name = "index"
harness = false

[[bench]]
name = "large"
harness = false

[[bench]]
name = "native"
harness = false

[[bench]]
name = "norkyst"
harness = false

[[bench]]
name = "read"
harness = false

[[bench]]
name = "serialize"
harness = false

[[bench]]
name = "stream"
harness = false
